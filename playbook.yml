- name: Create Security Groups
  hosts: localhost
  gather_facts: False
  roles:
    - aws-sgs

- name: Create db instance
  hosts: localhost
  gather_facts: False
  roles:
    - role: ec2_base
      vars:
        ec2_total_count: 1
        i_tags:
          Type: Ansible_Deployed
          Class: MySQL
        c_tag:
          Class: MySQL
        ec2_groups:
          - ssh-ansible
          - mysql-ansible

- name: Create web instances
  hosts: localhost
  gather_facts: False
  vars_prompt:
    - name: "ec2tc"
      prompt: "How many ec2 web instances in total?"
      private: no
  roles:
    - role: ec2_base
      vars:
        ec2_total_count: "{{ ec2tc }}"
        i_tags:
          Type: Ansible_Deployed
          Class: Flask
        c_tag:
          Class: Flask
        ec2_groups:
          - ssh-ansible
          - flask-ansible

- name: Install Ansible required Python
  hosts: tag_Type_Ansible_Deployed
  gather_facts: False
  roles:
    - ansible-python

- name: Provision MySQL
  hosts: tag_Class_MySQL
  roles:
    - python
    - mysql

- name: Deploy Web
  hosts: tag_Class_Flask
  #use pre_tasks for this because it needs to be done prior to roles
  pre_tasks:
    - name: Get IP of MySQL
      delegate_to: localhost
      ec2_instance_facts:
        region: "{{region}}"
        filters:
          "tag:Class": "MySQL"
          instance-state-name: running
      register: ec2
    #- debug: var=ec2['instances'][0]['public_ip_address']
    - debug: var=ec2['instances'][0]['private_ip_address']
  roles:
    - role: python
    - role: flask
      vars:
        #ec2ev: "{{ ec2['instances'][0]['public_ip_address'] }}"
        ec2ev: "{{ ec2['instances'][0]['private_ip_address'] }}"


- name: add target group for alb
  hosts: localhost
  pre_tasks:
    - name: Get web instance id's
      ec2_instance_facts:
        region: "{{region}}"
        filters:
          "tag:Class": "Flask"
          instance-state-name: running
      register: ec2targets
    - debug:
        var: item['instance_id']
      with_items: "{{ ec2targets['instances'] }}"
  roles:
    - alb-target-group

- name: add alb
  hosts: localhost
  roles:
    - aws-alb
